#ifndef BIBLIOTECA_H
#define BIBLIOTECA_H
int i;
#define MAX_LIVROS 100
#define MAX_USUARIOS 50
#include <locale.h>

typedef struct {
    int id;
    char titulo[100];
    char autor[100];
    int disponivel;
} Livro;

typedef struct {
    int id;
    char nome[100];
    int livroEmprestado;
} Usuario;

void inicializarBiblioteca();
void salvarDados();
void carregarDados();

void adicionarLivro();
void removerLivro();
void buscarLivro();
void listarLivrosDisponiveis();
void listarLivrosEmprestados();

void registrarEmprestimo();
void registrarDevolucao();

#endif

#include <stdio.h>
#include <stdlib.h>
#include <string.h>


Livro livros[MAX_LIVROS];
Usuario usuarios[MAX_USUARIOS];
int totalLivros = 0;
int totalUsuarios = 0;

void inicializarBiblioteca() {
    carregarDados();
}

void salvarDados() {
    FILE *file = fopen("biblioteca.dat", "wb");
    if (!file){
	printf("Erro ao salvar dados.\n");	
	 return;
	 }
    fwrite(&totalLivros, sizeof(int), 1, file);
    fwrite(livros, sizeof(Livro), totalLivros, file);
    fwrite(&totalUsuarios, sizeof(int), 1, file);
    fwrite(usuarios, sizeof(Usuario), totalUsuarios, file);
    fclose(file);
}

void carregarDados() {
    FILE *file = fopen("biblioteca.dat", "rb");
    if (!file) return;
    fread(&totalLivros, sizeof(int), 1, file);
    fread(livros, sizeof(Livro), totalLivros, file);
    fread(&totalUsuarios, sizeof(int), 1, file);
    fread(usuarios, sizeof(Usuario), totalUsuarios, file);
    fclose(file);
}

void adicionarLivro() {
    if (totalLivros >= MAX_LIVROS) {
        printf("Biblioteca cheia!\n");
        return;
    }
    Livro novo;
    novo.id = totalLivros + 1;
    printf("Título: ");
    getchar();
    fgets(novo.titulo, 100, stdin);
    printf("Autor: ");
    fgets(novo.autor, 100, stdin);
    novo.disponivel = 1;
    livros[totalLivros++] = novo;
    salvarDados();
    printf("Livro adicionado!\n");
}

void removerLivro() {
    int id;
    printf("ID do livro: ");
    scanf("%d", &id);
    for (i = 0; i < totalLivros; i++) {
        if (livros[i].id == id) {
            livros[i] = livros[totalLivros - 1];
            totalLivros--;
            salvarDados();
            printf("Livro removido!\n");
            return;
        }
    }
    printf("Livro não encontrado!\n");
}

void buscarLivro() {
    char titulo[100];
    printf("Título do livro: ");
    getchar();
    fgets(titulo, 100, stdin);
    for (i = 0; i < totalLivros; i++) {
        if (strstr(livros[i].titulo, titulo)) {
            printf("ID: %d, Título: %s, Autor: %s, Disponível: %s\n",
                   livros[i].id, livros[i].titulo, livros[i].autor,
                   livros[i].disponivel ? "Sim" : "Não");
        }
    }
    
}

void listarLivrosDisponiveis() {
    int i; 
    for (i = 0; i < totalLivros; i++) {
        if (livros[i].disponivel) {
            printf("ID: %d, Título: %s, Autor: %s\n",
                   livros[i].id, livros[i].titulo, livros[i].autor);
        }
    }
}

void listarLivrosEmprestados() {
    int i; 
    for (i = 0; i < totalLivros; i++) {
        if (!livros[i].disponivel) {
            printf("ID: %d, Título: %s, Autor: %s\n",
                   livros[i].id, livros[i].titulo, livros[i].autor);
        }
    }
}

void registrarEmprestimo() {
    int livroID, userID;
    printf("ID do livro: ");
    scanf("%d", &livroID);
    printf("ID do usuário: ");
    scanf("%d", &userID);
    
    if (livroID <= 0 || livroID > totalLivros || !livros[livroID - 1].disponivel) {
        printf("Livro não disponível!\n");
        return;
    }

    usuarios[totalUsuarios].id = userID;
    printf("Nome do usuário: ");
    getchar();
    fgets(usuarios[totalUsuarios].nome, 100, stdin);
    usuarios[totalUsuarios].livroEmprestado = livroID;
    totalUsuarios++;
    
    livros[livroID - 1].disponivel = 0;
    salvarDados();
    printf("Empréstimo registrado!\n");
}

void registrarDevolucao() {
    int livroID;
    printf("ID do livro: ");
    scanf("%d", &livroID);
    
    if (livroID <= 0 || livroID > totalLivros || livros[livroID - 1].disponivel) {
        printf("Livro não emprestado!\n");
        return;
    }

    int i; 
    for (i = 0; i < totalUsuarios; i++) {
        if (usuarios[i].livroEmprestado == livroID) {
            usuarios[i] = usuarios[totalUsuarios - 1];
            totalUsuarios--;
            break;
        }
    }
    
    livros[livroID - 1].disponivel = 1;
    salvarDados();
    printf("Devolução registrada!\n");
}

#include <stdio.h>
#include <windows.h>

void printCentralizado(const char *texto){
	CONSOLE_SCREEN_BUFFER_INFO csbi;
	int LarguraTerminal;
	
	GetConsoleScreenBufferInfo(GetStdHandle(STD_OUTPUT_HANDLE), &csbi);
	LarguraTerminal = csbi.srWindow.Right - csbi.srWindow.Left + 1;
	int ComprimentoTexto=strlen(texto);
	int espacos=(LarguraTerminal-ComprimentoTexto)/2;
	for(i=0;i<espacos;i++) printf(" ");
	printf("%s\n",texto);

}

void menu() {
	printCentralizado("|                     BIBLIOTECA                         |\n");
    printCentralizado("|========================================================|\n");
    printCentralizado("|         1.Adicionar Livros  2.Remover Livros           |\n");
    printCentralizado("|--------------------------------------------------------|\n");
    printCentralizado("|       3.Buscar Livros    4.Listar Livros Disponiveis   |\n");
    printCentralizado("|--------------------------------------------------------|\n");
    printCentralizado("|    5.Lista Livros Emprestados  6.Registrar Empréstimo  |\n");
    printCentralizado("|--------------------------------------------------------|\n");
    printCentralizado("|                7.Registrar Devolução                   |\n");
    printCentralizado("|--------------------------------------------------------|\n");
    printCentralizado("|                       0.Sair                           |\n");
}

int main() {
	setlocale(LC_ALL,"Portuguese");
    int opcao;
    inicializarBiblioteca();
    

    do {
        menu();
        printf("Escolha: ");
        scanf("%d", &opcao);
        switch (opcao) {
            case 1: adicionarLivro(); break;
            case 2: removerLivro(); break;
            case 3: buscarLivro(); break;
            case 4: listarLivrosDisponiveis(); break;
            case 5: listarLivrosEmprestados(); break;
            case 6: registrarEmprestimo(); break;
            case 7: registrarDevolucao(); break;
            case 0: printf("Saindo...\n"); break;
            default: printf("Opção inválida!\n");
        }
    } while (opcao != 0);

    return 0;
}
